global:
  # The smarthost and SMTP sender used for mail notifications.
  smtp_smarthost: {{alertmanager_smtp_smarthost}}
  smtp_from: {{alertmanager_smtp_from}}
  smtp_require_tls: {{alertmanager_smtp_require_tls}}
  smtp_auth_username: {{alertmanager_smtp_auth_username}}
  smtp_auth_password: {{alertmanager_smtp_auth_password}}
  # the slack Incoming WebHooks url
  slack_api_url: {{alertmanager_slack_api_url}}

  wechat_api_url: {{alertmanager_wechat_api_url}}
  wechat_api_secret: {{alertmanager_wechat_api_secret}}
  wechat_api_corp_id: {{alertmanager_wechat_api_corp_id}}

# The root route on which each incoming alert enters.
route:
  # The root route must not have any matchers as it is the entry point for
  # all alerts. It needs to have a receiver configured so alerts that do not
  # match any of the sub-routes are sent to someone.
  receiver: 'default-reciever'
  # The labels by which incoming alerts are grouped together. For example,
  # multiple alerts coming in for cluster=A and alertname=LatencyHigh would
  # be batched into a single group.
  group_by: ['alertname', 'instance']
  # When a new group of alerts is created by an incoming alert, wait at
  # least 'group_wait' to send the initial notification.
  # This way ensures that you get multiple alerts for the same group that start
  # firing shortly after another are batched together on the first
  # notification.
  group_wait: 30s
  # When the first notification was sent, wait 'group_interval' to send a batch
  # of new alerts that started firing for that group.
  group_interval: 5m
  # If an alert has successfully been sent, wait 'repeat_interval' to
  # resend them.
  repeat_interval: 3h
  # All the above attributes are inherited by all child routes and can
  # overwritten on each.
  # All alerts with job=ems
  # are dispatched to the ems-email-receiver pager.
  routes:
  - receiver: 'email-receiver'
    match:
       severity: warning
  - receiver: 'default-reciever'
    match:
       severity: critical
