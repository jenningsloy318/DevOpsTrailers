- name: download cfssl binaries
  get_url:
    url: "{{ item.app_url }}"
    dest: /usr/bin/{{ item.app_name }}
    mode: 0755
  with_items:
    - { app_url: "{{cfssl_bundle_url}}" , app_name: cfssl-bundle }
    - { app_url: "{{cfssl_certinfo_url}}" , app_name: cfssl-certinfo }
    - { app_url: "{{cfssl_newkey_url}}" , app_name: cfssl-newkey }
    - { app_url: "{{cfssl_scan_url}}" , app_name: cfssl-scan }
    - { app_url: "{{cfssl_url}}" , app_name: cfssl }
    - { app_url: "{{cfssljson_url}}" , app_name: cfssljson }
    - { app_url: "{{mkbundle_url}}" , app_name: mkbundle }
    - { app_url: "{{multirootca_url}}" , app_name: multirootca }
- name: check if /etc/cfssl/ exists
  stat:
    path: /etc/cfssl/ca.pem
  register: cfsslconfdir
- debug:
    var=cfsslconfdir


- name: create cfssl conf directory
  file:
    path: /etc/cfssl/
    state: directory
    mode: 0755
  when: cfsslconfdir.stat.exists == false

- name: check if ca.pem exists
  stat:
    path: /etc/cfssl/ca.pem
  register: cfsslca
- debug:
    var=cfsslca

- name: create csr_ca.json conf file
  copy:
    src: csr_ca.json
    dest: /etc/cfssl/csr_ca.json
    
- name: crate CA key and certificate
  shell: cfssl gencert -initca csr_ca.json | cfssljson -bare ca 
  args:
    chdir: /etc/cfssl/
  when: cfsslca.stat.exists == false

- name: crate config_ca.json
  template: 
    src: config_ca.json.j2
    dest: /etc/cfssl/config_ca.json
    mode: 0644
- name: crate db-config.json
  template: 
    src: db-config.json.j2
    dest: /etc/cfssl/db-config.json
    mode: 0644
- name: create client_csr.json conf file
  copy:
    src: client_csr.json
    dest: /etc/cfssl/client_csr.json  
- name: create tls key/cert for ssl api server
  shell: cfssl gencert -ca ca.pem -ca-key ca-key.pem client_csr.json| cfssljson -bare cfssl
  args:
    chdir: /etc/cfssl/
- name: install cfssl-api.service
  copy: 
    src: cfssl-api.service
    dest: /lib/systemd/system/cfssl-api.service
    
- name: start cfssl-api service
  systemd: 
    name: cfssl-api
    state: restarted
    enabled: yes
    daemon_reload: yes