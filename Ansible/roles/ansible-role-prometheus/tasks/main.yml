
- name: check version
  shell: /usr/bin/prometheus  --version >/dev/stdout 2>&1 |grep prometheus|awk '{print $3}'|grep {{ prometheus_version }}
  ignore_errors: yes
  register: prometheus

- debug:
    var=prometheus
- name: Fetch and Unarchive prometheus
  unarchive:
    src: "{{ prometheus_bin_url }}"
    dest: /tmp
    remote_src: yes
  when: prometheus.rc  !=0

- name: ensure prometheus group exist 
  group:
    name: prometheus
    state: present

- name: ensure prometheus user exist 
  user:
    name: prometheus
    shell: /bin/false
    createhome: no
    home: /etc/prometheus
    group: prometheus
    system: yes
- name: stop prometheus service if possible
  systemd: 
    name: prometheus
    state: stopped
    enabled: yes
    daemon_reload: yes
  when: prometheus.rc  !=0
  ignore_errors: yes

- name: copy prometheus binary
  copy:
    src: "/tmp/prometheus-{{ prometheus_version }}.linux-amd64/prometheus"
    dest: /usr/bin
    remote_src: yes
    mode: 0755
  when: prometheus.rc  !=0

- name: copy prometheus  promtool binary
  copy:
    src: "/tmp/prometheus-{{ prometheus_version }}.linux-amd64/promtool"
    dest: /usr/bin
    remote_src: yes
    mode: 0755
  when: prometheus.rc  !=0
- name: create prometheus service file
  template:
    src: prometheus.service
    dest: /lib/systemd/system/prometheus.service

- name: create prometheus conf dir
  file:
    path: /etc/prometheus/
    state: directory
    mode: 0755
    owner: prometheus
    group: prometheus

- name: create prometheus file sd dir
  file:
    path: /etc/prometheus/tgroups/
    state: directory
    mode: 0755
    owner: prometheus
    group: prometheus

- name: copy prometheus  console_libraries  console_libraries files
  shell: cp -rf "/tmp/prometheus-{{ prometheus_version }}.linux-amd64/console_libraries" "/tmp/prometheus-{{ prometheus_version }}.linux-amd64/consoles"  /etc/prometheus/
  when: prometheus.rc  !=0

- name: create prometheus conf file
  template:
    src: "{{item.src}}"
    dest: "{{item.target}}"
    mode: 0755
    owner: prometheus
    group: prometheus
  notify:
    reload_prometheus_conf
  with_items:
  - {src: "alertmanagers.yml.j2",target: "/etc/prometheus/alertmanagers.yml"}
  - {src: "prometheus.yml.j2",target: "/etc/prometheus/prometheus.yml"}



- name: create alert.rules.yml conf file
  copy:
    src: alert.rules.yml
    dest: /etc/prometheus/alert.rules.yml

- name: start prometheus service if not running
  systemd: 
    name: prometheus
    state: started
    enabled: yes
    daemon_reload: yes

- file:
    path: "{{item}}"
    owner: prometheus
    group: prometheus
    recurse: yes
  with_items:
  - "{{prometheus_storage_path}}"
  - /etc/prometheus
  notify:
    reload_prometheus_conf  

- name: and more targets
  copy:
    src: "{{item.job_name}}-targets.yml"
    dest: /etc/prometheus/tgroups/
    mode: 0755
  with_items:
   - prometheus_job_list

- name: add firewalld rules
  firewalld:
    zone: public
    port: 9090/tcp
    permanent: true
    state: enabled
- name: reload firewalld
  shell: firewall-cmd --reload



