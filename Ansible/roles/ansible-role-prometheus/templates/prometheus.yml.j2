global:
  scrape_interval: 15s
rule_files:
- '/etc/prometheus/inb.alert.rules.yml'
- '/etc/prometheus/oob.alert.rules.yml'

scrape_configs:
{% if prometheus_file_sd_job_list is defined  -%}
{% for job in prometheus_file_sd_job_list -%}
{% if job.job_name == 'prometheus' -%}
- job_name: '{{ job.job_name }}'
  metrics_path: {{ job.metrics_path }}
  file_sd_configs:
    - files: ['tgroups/prometheus-targets.yml']  
{% endif -%}

{% if job.job_name == 'alertmanager' -%}
- job_name: '{{ job.job_name }}'
  metrics_path: {{ job.metrics_path }}
  file_sd_configs:
    - files: ['tgroups/alertmanager-targets.yml']  
{% endif -%}

{% if job.job_name == 'grafana' -%}
- job_name: '{{ job.job_name }}'
  metrics_path: {{ job.metrics_path }}
  file_sd_configs:
    - files: ['tgroups/grafana-targets.yml']  
{% endif -%}

{% if job.job_name == 'telegraf' -%}
- job_name: '{{ job.job_name }}'
  metrics_path: {{ job.metrics_path }}
  file_sd_configs:
    - files: ['tgroups/telegraf-targets.yml']
  relabel_configs:
    - source_labels: [__address__]
      regex: '(.*):.*'
      target_label: instance
      replacement: ${1}
{% endif -%}

{% if job.job_name == 'mysql_exporter' -%}
- job_name: '{{ job.job_name }}'
  metrics_path: {{ job.metrics_path }}
  file_sd_configs:
  - files: ['tgroups/mysql-targets.yml']
{% endif -%}

{% if job.job_name == 'hana_exporter' -%}
- job_name: '{{ job.job_name }}'
  metrics_path: {{ job.metrics_path }}
  scrape_timeout: 30s
  scrape_interval: 30s
  file_sd_configs:
    - files: ['tgroups/hana-targets.yml']  
  relabel_configs:
     - source_labels: [__address__]
       target_label: __param_target
     - source_labels: [__param_target]
       target_label: instance
     - target_label: __address__
       replacement: {{job.hana_exporter_addr}}   ### the address of the hana-exporter address
{% endif -%}

{% if job.job_name == 'blackbox_exporter' -%}
- job_name: '{{ job.job_name }}'
  metrics_path: '{{ job.metrics_path }}'
  params:
    module: ['{{ job.module }}']
  file_sd_configs:
    - files: ['tgroups/blackbox-targets.yml']  
  relabel_configs:
    - source_labels: [__address__]
      target_label: __param_target
    - source_labels: [__param_target]
      target_label: instance
    - target_label: __address__
      replacement: {{job.blackbox_exporter_addr}} # The blackbox exporter's real hostname:port.

{% endif -%}

{% if job.job_name == 'bigip_exporter' -%}
- job_name: '{{ job.job_name }}'
  metrics_path: '{{ job.metrics_path }}'
  file_sd_configs:
    - files: ['tgroups/bigip-targets.yml']  
  relabel_configs:
    - source_labels: [__address__]
      target_label: __param_target
    - source_labels: [__param_target]
      target_label: instance
    - target_label: __address__
      replacement:  {{job.bigip_exporter_addr}}   # The bigip exporter's real hostname:port.
{% endif -%}

{% if job.job_name == 'snmp_exporter' -%}
- job_name: '{{ job.job_name }}'
  metrics_path: '{{ job.metrics_path }}'
  params:
    module: ['{{ job.module }}']
  file_sd_configs:
    - files: ['tgroups/snmp-targets.yml']  
  relabel_configs:
    - source_labels: [__address__]
      target_label: __param_target
    - source_labels: [__param_target]
      target_label: instance
    - target_label: __address__
      replacement:  {{job.snmp_exporter_addr}}   # The snmp exporter's real hostname:port.
{% endif -%}

{% if job.job_name == 'ipmi_exporter' -%}
- job_name: '{{ job.job_name }}'
  metrics_path: '{{ job.metrics_path }}'
  file_sd_configs:
    - files: ['tgroups/ipmi-targets.yml']  
  relabel_configs:
    - source_labels: [__address__]
      separator: ;
      regex: (.*)(:80)?
      target_label: __param_target
      replacement: ${1}
      action: replace
    - source_labels: [__param_target]
      separator: ;
      regex: (.*)
      target_label: instance
      replacement: ${1}
      action: replace
    - separator: ;
      regex: .*
      target_label: __address__
      replacement: {{job.ipmi_exporter_addr}}  
      action: replace
{% endif -%}


{% if job.job_name == 'nginx_exporter' -%}
- job_name: '{{ job.job_name }}'
  metrics_path: {{ job.metrics_path }}
  file_sd_configs:
  - files: ['tgroups/nginx-targets.yml']
{% endif -%}

{% if job.job_name == 'netapp-harvest' -%}
- job_name: '{{ job.job_name }}'
  metrics_path: {{ job.metrics_path }}
  file_sd_configs:
  - files: ['tgroups/netapp.yml']
{% endif -%}

{% endfor -%}

{% endif -%}

{% if prometheus_consul_sd_job_list is defined -%}

{% for job in prometheus_consul_sd_job_list -%}

- job_name: {{ job.job_name }}
  scrape_interval: 30s
  scrape_timeout: 30s
  metrics_path:  {{ job.metrics_path }}
  {% if job.target_meta.type == 'direct' -%}
  relabel_configs:
  - source_labels: [__address__]
    target_label: instance
  {% endif -%}

  {% if job.target_meta.type == 'proxy' and job.target_meta.proxy_type == 'snmp_exporter' -%}
  params:
    module: 
    -  {{ job.target_meta.module }}
  relabel_configs:
  - source_labels: [__meta_consul_service_address]
    target_label: __address__
  - source_labels: [__address__]
    target_label: __param_target
  - source_labels: [__param_target]
    target_label: instance
  - target_label: __address__
    replacement: {{job.target_meta.proxy_addr }} # The SNMP exporter's real hostname:port.
  {% endif -%}

  {% if job.target_meta.type == 'proxy' and job.target_meta.proxy_type == 'ipmi_exporter' -%}
  relabel_configs:
  - source_labels: [__meta_consul_service_address]
    target_label: __param_target
  - source_labels: [__param_target]
    target_label: instance
  - separator: ;
    regex: .*
    target_label: __address__
    replacement: {{job.target_meta.proxy_addr }} # The IPMI exporter's real hostname:port.
    action: replace
  {% endif -%}

  {% if job.target_meta.type == 'proxy' and job.target_meta.proxy_type == 'bigip_exporter' -%}
  relabel_configs:
  - source_labels: [__address__]
    target_label: __param_target
  - source_labels: [__param_target]
    target_label: instance
  - target_label: __address__
    replacement: {{job.target_meta.proxy_addr }}  # The bigip exporter's real hostname:port.
  {% endif -%}

  {% if job.target_meta.type == 'proxy' and job.target_meta.proxy_type == 'blackbox_exporter' -%}
  params:
    module: 
    - {{job.target_meta.module }} 
  relabel_configs:
  - source_labels: [__address__]
    target_label: __param_target
  - source_labels: [__param_target]
    target_label: instance
  - target_label: __address__
    replacement: {{job.target_meta.proxy_addr }}  # The blackbox exporter's real hostname:port.
  {% endif -%}

  {% if job.target_meta.type == 'proxy' and job.target_meta.proxy_type == 'hana_exporter' -%}
  relabel_configs:
  - source_labels: [__address__]
    target_label: __param_target
  - source_labels: [__param_target]
    target_label: instance
  - target_label: __address__
    replacement: {{job.target_meta.proxy_addr }}   ### the address of the hana-exporter address
  {% endif -%} 

  - source_labels: [__meta_consul_tags]
    regex: ',(?:[^,]+,){0}([^=]+)=([^,]+),.*'
    replacement: '${2}'
    target_label: '${1}'
  - source_labels: [__meta_consul_tags]
    regex: ',(?:[^,]+,){1}([^=]+)=([^,]+),.*'
    replacement: '${2}'
    target_label: '${1}'
  - source_labels: [__meta_consul_tags]
    regex: ',(?:[^,]+,){2}([^=]+)=([^,]+),.*'
    replacement: '${2}'
    target_label: '${1}'
  - source_labels: [__meta_consul_tags]
    regex: ',(?:[^,]+,){3}([^=]+)=([^,]+),.*'
    replacement: '${2}'
    target_label: '${1}'
  - source_labels: [__meta_consul_tags]
    regex: ',(?:[^,]+,){4}([^=]+)=([^,]+),.*'
    replacement: '${2}'
    target_label: '${1}'
  consul_sd_configs:
   - server: {{ job.consule_server }}
     datacenter: {{ job.consule_datacenter }}
     services:  
     - {{ job.consule_service }} 
{% endfor -%}

{% endif -%}

alerting:
  alertmanagers:
  {% if prometheus_file_sd_alertmanager_list is defined -%}
  {% for alertmanager in prometheus_file_sd_alertmanager_list -%}
  - file_sd_configs:
    - files: 
      - {{ alertmanager }}
  {% endfor -%}
  {% endif -%}
  {% if prometheus_consul_sd_alertmanager_list is defined -%}
  {% for alertmanager in prometheus_consul_sd_alertmanager_list -%}
  - consul_sd_configs:
    - server: {{ alertmanager.consule_server }}
      datacenter: {{ alertmanager.consule_datacenter }}
      services: 
      - {{ alertmanager.consule_service }}

  {% endfor -%}
  {% endif -%}