
- name: download  and extract elastiflow
  unarchive:
      src: https://github.com/robcowart/elastiflow/archive/master.zip
      dest: /tmp  
      remote_src: yes 

  

- name: install  logstash-codec-sflow plugins
  shell: /usr/share/logstash/bin/logstash-plugin install logstash-codec-sflow
  args:
    warn: no
    executable: /bin/bash
  
- name: update logstash plugins
  shell: /usr/share/logstash/bin/logstash-plugin update "{{logstash_plugin}}"
  with_items:
  - logstash-codec-netflow
  - logstash-input-udp
  - logstash-filter-dns
  loop_control:
    loop_var: logstash_plugin
  args:
    warn: no
    executable: /bin/bash

- name: copy elastiflow to /etc/logstash
  shell: cp -a /tmp/elastiflow-master/logstash/elastiflow /etc/logstash/
  args:
    warn: no
    executable: /bin/bash

- name: copy logstash.service conf file of  elastiflow pipeline 
  shell: sudo cp -a /tmp/elastiflow-master/logstash.service.d /etc/systemd/system/
  args:
    warn: no
    executable: /bin/bash



- name: enable ES cluster output
  shell: mv 30_output_10_single.logstash.conf 30_output_10_single.logstash.conf.disabled && mv 30_output_20_multi.logstash.conf.disabled 30_output_20_multi.logstash.conf
  args:
    chdir: /etc/logstash/elastiflow/conf.d/
    warn: no
    executable: /bin/bash

- name: configure ES cluster nodes (1)
  lineinfile:
    path:  /etc/systemd/system/logstash.service.d/elastiflow.conf
    regexp: '^Environment="ELASTIFLOW_ES_HOST=.*$'
    state: absent

- name: configure ES cluster nodes (2)
  lineinfile:
    path:  /etc/systemd/system/logstash.service.d/elastiflow.conf
    regexp: '^(Environment="ELASTIFLOW_ES_HOST_1)=.*$'
    line:  '\1={{ES_CLUSTER_INSTANCE_1}}"'
    backrefs: yes

- name: configure ES cluster nodes (3)
  lineinfile:
    path:  /etc/systemd/system/logstash.service.d/elastiflow.conf
    regexp: '^(Environment="ELASTIFLOW_ES_HOST_2)=.*$'
    line:  '\1={{ES_CLUSTER_INSTANCE_2}}"'
    backrefs: yes

- name: configure ES cluster nodes (4)
  lineinfile:
    path:  /etc/systemd/system/logstash.service.d/elastiflow.conf
    regexp: '^(Environment="ELASTIFLOW_ES_HOST_3)=.*$'
    line:  '\1={{ES_CLUSTER_INSTANCE_3}}"'
    backrefs: yes

- name: configure ES cluster nodes (5)
  lineinfile:
    path:  /etc/systemd/system/logstash.service.d/elastiflow.conf
    regexp: '^(Environment="ELASTIFLOW_ES_USER)=.*$'
    line:  '\1={{ES_CLUSTER_USER}}"'
    backrefs: yes
- name: configure ES cluster nodes (6)
  lineinfile:
    path:  /etc/systemd/system/logstash.service.d/elastiflow.conf
    regexp: '^(Environment="ELASTIFLOW_ES_PASSWD)=.*$'
    line:  '\1={{ES_CLUSTER_PASS}}"'
    backrefs: yes

- name: set up index for elastiflow on kibana
  uri:
    url: "{{KIBABA_SCHEMA}}://{{KIBANA_INSTANCE}}/api/saved_objects/index-pattern/elastiflow-*"
    method: POST
    src: /tmp/elastiflow-master/kibana/elastiflow.index_pattern.json
    user: "{{KIBANA_USER}}"
    password: "{{KIBANA_PASS}}"
    force_basic_auth: yes
    headers:
        Content-Type: "application/json"
        kbn-xsrf: true
  ignore_errors: yes

- name: import elastiflow dashboard
  uri:
    url: "{{KIBABA_SCHEMA}}://{{KIBANA_INSTANCE}}//api/kibana/dashboards/import"
    method: POST
    src:  /tmp/elastiflow-master/kibana/elastiflow.dashboards.6.4.x.json
    user: "{{KIBANA_USER}}"
    password: "{{KIBANA_PASS}}"
    force_basic_auth: yes
    headers:
        Content-Type: "application/json"
        kbn-xsrf: true
  ignore_errors: yes
