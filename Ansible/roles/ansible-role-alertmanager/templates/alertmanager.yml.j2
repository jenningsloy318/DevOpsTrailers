global:
  # The smarthost and SMTP sender used for mail notifications.
  smtp_smarthost: {{alertmanager_smtp_smarthost}}
  smtp_from: {{alertmanager_smtp_from}}
  smtp_require_tls: {{alertmanager_smtp_require_tls}}
  smtp_auth_username: {{alertmanager_smtp_auth_username}}
  smtp_auth_password: {{alertmanager_smtp_auth_password}}
  # slack api url
{%if alertmanager_slack_api_url %}
  slack_api_url: {{alertmanager_slack_api_url}}
{%endif%}

  # wechat conf
  wechat_api_url: {{alertmanager_wechat_api_url|default("https://qyapi.weixin.qq.com/cgi-bin/")}}
{% if alertmanager_wechat_api_secret %}
  wechat_api_secret: {{alertmanager_wechat_api_secret}}
{%endif%}

{%if alertmanager_wechat_api_corp_id%}
  wechat_api_corp_id: {{alertmanager_wechat_api_corp_id}}
{%endif%}


inhibit_rules:
# if same instance with same alertname have both critical and warning alerts, this will inhibit warning alerts
- source_match:
    severity: 'critical'
  target_match:
    severity: 'warning'
  equal: ['alertname', 'instance']


# if instance is down, inhibit other critical alerts
- source_match:
    alertname: 'Instance is Down'
  target_match:
    severity: 'critical'
  equal: [ 'instance']


# The root route on which each incoming alert enters.
route:
  # The root route must not have any matchers as it is the entry point for
  # all alerts. It needs to have a receiver configured so alerts that do not
  # match any of the sub-routes are sent to someone.
  receiver: 'default-reciever'
  # The labels by which incoming alerts are grouped together. For example,
  # multiple alerts coming in for cluster=A and alertname=LatencyHigh would
  # be batched into a single group.
  group_by: ['alertname', 'instance']
  # When a new group of alerts is created by an incoming alert, wait at
  # least 'group_wait' to send the initial notification.
  # This way ensures that you get multiple alerts for the same group that start
  # firing shortly after another are batched together on the first
  # notification.
  group_wait: 30s
  # When the first notification was sent, wait 'group_interval' to send a batch
  # of new alerts that started firing for that group.
  group_interval: 5m
  # If an alert has successfully been sent, wait 'repeat_interval' to
  # resend them.
  repeat_interval: 3h
  # All the above attributes are inherited by all child routes and can
  # overwritten on each.
  routes:
  - receiver: 'email-receiver'
    match:
       severity: warning
  - receiver: 'email-reciever'
    match:
       severity: critical
{%if alertmanager_wechat_api_secret and alertmanager_wechat_api_corp_id %}
  - receiver: 'wechat-reciever'
    match:
       severity: critical
{%endif%}

{%if alertmanager_slack_api_url %}
  - receiver: 'slack-reciever'
    match:
       severity: critical
{%endif%}
receivers:
- name: 'email-receiver'
  email_configs:
  - send_resolved: true
    to:  '{% for recipient in alertmanager_smtp_recipients%}{{recipient}}{% if not loop.last %},{% endif %} {%endfor%}'
    headers:
      Subject: '{{alertmanager_alert_subject_head}}:{%raw%} {{ template "email.default.subject" . }}'{%endraw%}

{%if alertmanager_wechat_api_secret and alertmanager_wechat_api_corp_id %}
- name: 'wechat-reciever'
  wechat_configs:
  - send_resolved: true
    message: '{{alertmanager_alert_subject_head}}:{%raw%} {{ template "wechat.default.message" . }}'{%endraw%}
    to_user: "{{alertmanager_wechat_to_user_id|default("")}}"
    to_party: "{{alertmanager_wechat_to_party_id|default("")}}"
    to_tag: "{{alertmanager_wechat_to_tag_id|default("")}}"
    agent_id: "{{alertmanager_wechat_agent_id}}"
{%endif%}

{%if alertmanager_slack_api_url %}
- name: 'slack-reciever'
  slack_configs:
  - send_resolved: true
    channel: '#{{alertmanager_slack_channel}}'
    title: "{{alertmanager_alert_subject_head}}:{%raw%} {{ .Status | toUpper }}  {{ .CommonAnnotations.summary }}\n"{%endraw%}
    text: {%raw%}"{{range .Alerts }}\nDescription: {{ .Annotations.description }}\n{{ range .Labels.SortedPairs }} {{ .Name }}: {{ .Value }}\n{{end}}Metrics: <{{ .GeneratorURL}}| Click here>\n{{ end }}"{%endraw%}
{%endif%}
