- name: check if ipmi_exporter is installed 
  stat: 
    path: /usr/bin/ipmi_exporter 
  register: ipmi_exporter
  ignore_errors: yes

  
- name: download ipmi_exporter binary 
  get_url:
    url: "{{ ipmi_exporter_binary_url}}"
    dest: "/tmp/ipmi_exporter-{{ipmi_exporter_version}}.linux-amd64.tar.gz"
  when: not  ipmi_exporter.stat.exists 

- name: Unarchive  telegraf binary 
  unarchive:
    src: "/tmp/ipmi_exporter-{{ipmi_exporter_version}}.linux-amd64.tar.gz"
    dest: /tmp
    remote_src: yes
  when: not  ipmi_exporter.stat.exists 
  
- name: create ipmi_exporter conf dir
  file:
    path: /etc/prometheus/
    state: directory
    mode: 0755

- name: stop ipmi_exporter if possible
  systemd:
    name: ipmi_exporter
    state: stopped
  when: not  ipmi_exporter.stat.exists 
  ignore_errors: yes

- name: copy ipmi_exporter binary
  copy:
    src: "/tmp/ipmi_exporter-{{ipmi_exporter_version}}.linux-amd64/ipmi_exporter"
    dest: /usr/bin
    remote_src: yes
    mode: 0755
  when: not  ipmi_exporter.stat.exists 

- name: create ipmi_exporter service file
  copy:
    src: ipmi_exporter.service
    dest: /lib/systemd/system/ipmi_exporter.service
  register: ipmi_exporter_service


- name: create ipmi_exporter conf file 
  template:
    src: ipmi_exporter.yml.j2
    dest: /etc/prometheus/ipmi.yml
  register: ipmi_exporter_conf
- name: restart ipmi_exporter 
  systemd: 
    name: ipmi_exporter 
    state: restarted 
    enabled: yes
    daemon_reload: yes
  when: ipmi_exporter_conf is changed or ipmi_exporter_service is changed

- name: add firewalld rules
  firewalld:
    zone: public
    port: 9290/tcp
    permanent: true
    state: enabled
- name: reload firewalld
  shell: firewall-cmd --reload    
    